{"ast":null,"code":"var _jsxFileName = \"/Users/manaswiniaitha/Documents/part-time/headlines-frontend/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './End';\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport axios from \"axios\";\nimport { Stack } from '@mui/material';\nimport { API_URL, API_GET_URL } from \"../src/constants\";\nimport End from './End';\n// import { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [predictions, setPredictions] = useState([]);\n  const [text, setText] = useState('');\n  const [isTabActive, setIsTabActive] = useState(true);\n  const [tabChangeCount, setTabChangeCount] = useState(0);\n  // const [count,setCount] =useState(0);\n  const [Count, setCount] = useState(0);\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.hidden) {\n        // User moved away from the tab or window\n        setTabChangeCount(prevCount => prevCount + 1);\n        localStorage.setItem('tabChangeCount', tabChangeCount + 1);\n      }\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, [tabChangeCount]);\n  useEffect(() => {\n    const storedTabChangeCount = localStorage.getItem('tabChangeCount');\n    if (storedTabChangeCount) {\n      setTabChangeCount(parseInt(storedTabChangeCount, 10));\n    }\n  }, []);\n  useEffect(() => {\n    const Count = localStorage.getItem('Count');\n    console.log(Count);\n    if (Count) {\n      if (Count >= 2) {\n        alert('Game is over');\n        setTabChangeCount(0);\n        localStorage.setItem('tabChangeCount', 0);\n        localStorage.setItem('Count', 0);\n      }\n    }\n  }, [Count]);\n  useEffect(() => {\n    const handleBeforeUnload = () => {\n      setTabChangeCount(0);\n      localStorage.removeItem('tabChangeCount');\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, []);\n  async function fetchData() {\n    try {\n      const response = await axios.post(API_GET_URL, {\n        task: '0'\n      });\n      setText(response.data);\n      console.log('before');\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const clearTableRows = () => {\n    var table = document.getElementById(\"table-body\");\n    for (var i = table.rows.length - 1; i > 0; i--) {\n      table.deleteRow(i);\n    }\n  };\n  useEffect(() => {\n    const table = document.getElementById('predictions-table');\n    if (table) {\n      // Clear existing rows\n\n      clearTableRows();\n\n      // Sort predictions array by score in descending order\n      const sortedPredictions = predictions.sort((a, b) => b.Score - a.Score);\n      sortedPredictions.forEach(prediction => {\n        const newRow = table.insertRow();\n        // Create cells and set their values\n        const headlineCell = newRow.insertCell();\n        headlineCell.innerText = prediction.Headline;\n        const scoreCell = newRow.insertCell();\n        scoreCell.innerText = prediction.Score;\n        if (prediction.Headline === inputValue) {\n          newRow.classList.add('green-row');\n        }\n        setInputValue('');\n        if (predictions.length == 2) {\n          console.log('done');\n          setPredictions([]);\n          // console.log(count)\n          setCount(prevCount => prevCount + 1);\n          localStorage.setItem('Count', Count + 1);\n          fetchData();\n          clearTableRows();\n        }\n      });\n    }\n  }, [predictions]);\n  const handleSubmit = async () => {\n    try {\n      if (inputValue.length > 100) {\n        alert(\"Your proposed headline is too long.Try to shorten it for good score!!\");\n      }\n      const response = await axios.post(API_URL, {\n        input: inputValue\n      });\n      const newPred = {\n        Headline: response.data.Headline,\n        Score: response.data.Score\n      };\n      //setPredictions([{ Headline: response.data.Headline, Score: response.data.Score }]);\n      setPredictions(prevPredictions => [...prevPredictions, newPred]);\n      if (response.data.Consistent < 0.5) {\n        alert(\"You are moving off the topic.Try to be consistent to get a good score!!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headline\",\n        style: {\n          display: 'flex',\n          background: 'green',\n          width: '100%',\n          alignItems: 'center',\n          justifyContent: 'center',\n          alignContent: 'center',\n          height: '80px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: '#FFF',\n            fontFamily: 'monospace'\n          },\n          children: \"Headlines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          marginTop: \"50px\",\n          fontFamily: 'monospace'\n        },\n        children: \"Reframe the below headline to find your score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: \"50px\",\n          fontFamily: 'monospace'\n        },\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        sx: {\n          width: '100%',\n          alignItems: 'center',\n          justifyContent: \"center\",\n          margin: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          value: inputValue,\n          onChange: event => setInputValue(event.target.value),\n          placeholder: \"Enter your proposed headline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          style: {\n            marginLeft: '10px',\n            top: '-10px',\n            position: 'relative'\n          },\n          type: \"submit\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        id: \"predictions-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Headline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          id: \"table-body\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Tab Change Count: \", tabChangeCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"N/EKpJt2XjF/6mv2TGv6PqOUY+k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","useNavigate","Table","Button","axios","Stack","API_URL","API_GET_URL","End","jsxDEV","_jsxDEV","App","_s","inputValue","setInputValue","predictions","setPredictions","text","setText","isTabActive","setIsTabActive","tabChangeCount","setTabChangeCount","Count","setCount","handleVisibilityChange","document","hidden","prevCount","localStorage","setItem","addEventListener","removeEventListener","storedTabChangeCount","getItem","parseInt","console","log","alert","handleBeforeUnload","removeItem","window","fetchData","response","post","task","data","error","clearTableRows","table","getElementById","i","rows","length","deleteRow","sortedPredictions","sort","a","b","Score","forEach","prediction","newRow","insertRow","headlineCell","insertCell","innerText","Headline","scoreCell","classList","add","handleSubmit","input","newPred","prevPredictions","Consistent","children","style","display","flexDirection","alignItems","className","background","width","justifyContent","alignContent","height","color","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","margin","direction","sx","type","value","onChange","event","target","placeholder","variant","marginLeft","top","position","onClick","striped","bordered","id","_c","$RefreshReg$"],"sources":["/Users/manaswiniaitha/Documents/part-time/headlines-frontend/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './End';\nimport { BrowserRouter as Router,Routes, Route,useNavigate } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport axios from \"axios\";\nimport { Stack } from '@mui/material';\nimport { API_URL,API_GET_URL } from \"../src/constants\";\nimport End from './End';\n// import { useHistory } from 'react-router-dom';\n\nfunction App() {\n  \n  const [inputValue, setInputValue] = useState('');\n  const [predictions, setPredictions] = useState([]);\n  const [text,setText]=useState('');\n  const [isTabActive, setIsTabActive] = useState(true);\n  const [tabChangeCount, setTabChangeCount] = useState(0);\n  // const [count,setCount] =useState(0);\n  const [Count,setCount] =useState(0);\n\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.hidden) {\n        // User moved away from the tab or window\n        setTabChangeCount((prevCount) => prevCount + 1);\n        localStorage.setItem('tabChangeCount', tabChangeCount + 1);\n      }\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, [tabChangeCount]);\n\n  useEffect(() => {\n    const storedTabChangeCount = localStorage.getItem('tabChangeCount');\n    if (storedTabChangeCount) {\n      setTabChangeCount(parseInt(storedTabChangeCount, 10));\n    }\n  }, []);\n\n  useEffect(() => {\n    const Count = localStorage.getItem('Count');\n    console.log(Count)\n    if (Count){\n      if (Count >= 2) {\n        alert('Game is over'); \n        setTabChangeCount(0);\n        localStorage.setItem('tabChangeCount', 0);\n        localStorage.setItem('Count', 0);\n\n        }\n    }\n   \n  }, [Count]);\n\n  useEffect(() => {\n    const handleBeforeUnload = () => {\n      setTabChangeCount(0);\n      localStorage.removeItem('tabChangeCount');\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, []);\n\n\n  async function fetchData() {\n    try {\n      const response = await axios.post(API_GET_URL, { task: '0' });\n      setText(response.data);\n      console.log('before')\n      \n       \n      \n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const clearTableRows = () => {\n    var table = document.getElementById(\"table-body\");\n    for(var i = table.rows.length - 1; i > 0; i--)\n    {\n        table.deleteRow(i);\n    }\n    \n  };\n\n  useEffect(() => {\n    const table = document.getElementById('predictions-table');\n    \n    if (table) {\n      // Clear existing rows\n      \n      clearTableRows();\n     \n      // Sort predictions array by score in descending order\n      const sortedPredictions= predictions.sort((a, b) => b.Score - a.Score);\n      sortedPredictions.forEach((prediction) => {\n        const newRow = table.insertRow();\n        // Create cells and set their values\n        const headlineCell = newRow.insertCell();\n        headlineCell.innerText = prediction.Headline;\n  \n        const scoreCell = newRow.insertCell();\n        scoreCell.innerText = prediction.Score;\n        if (prediction.Headline === inputValue) {\n          newRow.classList.add('green-row');\n        }\n        setInputValue('');\n        if (predictions.length == 2) {\n          console.log('done');\n          setPredictions([])\n          // console.log(count)\n          setCount((prevCount)=>prevCount+1) \n          localStorage.setItem('Count', Count + 1);\n          fetchData();\n          clearTableRows();\n        }\n      });\n    }\n  }, [predictions]);\n  \n\n\n  const handleSubmit = async () => {\n    try {\n      if (inputValue.length > 100) {\n        alert(\"Your proposed headline is too long.Try to shorten it for good score!!\");\n      }\n      const response = await axios.post(API_URL, { input: inputValue });\n      const newPred = { Headline: response.data.Headline, Score: response.data.Score };\n      //setPredictions([{ Headline: response.data.Headline, Score: response.data.Score }]);\n      setPredictions((prevPredictions) => [...prevPredictions, newPred]);\n      if(response.data.Consistent < 0.5){\n        alert(\"You are moving off the topic.Try to be consistent to get a good score!!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Router>\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <div className='headline' style={{display:'flex',background:'green', width:'100%',alignItems:'center',justifyContent:'center', alignContent:'center', height:'80px'}}>\n        <h1 style={{color:'#FFF',fontFamily:'monospace'}}>Headlines</h1>\n      </div>\n      <h4 style={{marginTop:\"50px\",fontFamily:'monospace'}}>Reframe the below headline to find your score</h4>\n      <h2 style={{margin:\"50px\",fontFamily:'monospace'}}>{text}</h2>\n      <Stack direction='row' sx={{width:'100%', alignItems:'center', justifyContent:\"center\", margin:'10px'}}>\n        <input className='input'\n          type=\"text\"\n          value={inputValue}\n          onChange={(event) => setInputValue(event.target.value)}\n          placeholder=\"Enter your proposed headline\"\n        />\n        <Button variant=\"success\" style={{marginLeft:'10px', top:'-10px', position:'relative'}} type='submit'onClick={handleSubmit}>Submit</Button>\n      </Stack>\n      <Table  striped bordered id = \"predictions-table\">\n        <thead>\n          <tr>\n            <th>Headline</th>\n            <th>Score</th>\n          </tr>\n        </thead>\n        <tbody id='table-body'>\n          <tr>\n            <td></td>\n            <td></td>  \n          </tr>\n        </tbody>\n      </Table>\n    </div><div>\n      <span>Tab Change Count: {tabChangeCount}</span>\n    </div>\n\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}