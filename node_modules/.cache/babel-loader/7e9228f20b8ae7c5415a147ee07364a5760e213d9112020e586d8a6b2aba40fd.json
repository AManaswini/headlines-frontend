{"ast":null,"code":"var _jsxFileName = \"/Users/manaswiniaitha/Documents/part-time/headlines-frontend/my-app/src/App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './End';\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport axios from \"axios\";\nimport { Stack } from '@mui/material';\nimport { API_URL, API_GET_URL } from \"../src/constants\";\nimport End from './End';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  //const navigate = useNavigate();\n  const [inputValue, setInputValue] = useState('');\n  const [predictions, setPredictions] = useState([]);\n  const [text, setText] = useState('');\n  const [isTabActive, setIsTabActive] = useState(true);\n  const [tabChangeCount, setTabChangeCount] = useState(0);\n  const [count, setCount] = useState(0);\n\n  // Function to handle tab visibility change\n  // const handleVisibilityChange = () => {\n  //   setIsTabActive(!document.hidden);\n  //   setTabChangeCount((prevCount) => prevCount + 1);\n  //   console.log('count')\n  //   console.log(tabChangeCount)\n  // };\n\n  _s(useEffect(_s(() => {\n    _s();\n    if (count >= 16) {\n      // alert('Game is over'); \n      const navigate = useNavigate();\n      // alert('Game is over');\n      navigate('/end', {\n        replace: true\n      });\n      // <End/>\n      // navigate('/end', { replace: true });\n    }\n  }, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  }), [count]), \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n  async function fetchData() {\n    try {\n      const response = await axios.post(API_GET_URL, {\n        task: '0'\n      });\n      setText(response.data);\n      console.log('before');\n      console.log(count);\n      console.log(count);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    fetchData();\n    // document.addEventListener('visibilitychange', handleVisibilityChange);\n    // return () => {\n    //   document.removeEventListener('visibilitychange', handleVisibilityChange);\n    // };\n  }, []);\n  const clearTableRows = () => {\n    var table = document.getElementById(\"table-body\");\n    for (var i = table.rows.length - 1; i > 0; i--) {\n      table.deleteRow(i);\n    }\n  };\n  useEffect(() => {\n    const table = document.getElementById('predictions-table');\n    if (table) {\n      // Clear existing rows\n\n      clearTableRows();\n\n      // Sort predictions array by score in descending order\n      const sortedPredictions = predictions.sort((a, b) => b.Score - a.Score);\n      sortedPredictions.forEach(prediction => {\n        const newRow = table.insertRow();\n        // Create cells and set their values\n        const headlineCell = newRow.insertCell();\n        headlineCell.innerText = prediction.Headline;\n        const scoreCell = newRow.insertCell();\n        scoreCell.innerText = prediction.Score;\n        if (prediction.Headline === inputValue) {\n          newRow.classList.add('green-row');\n        }\n        setInputValue('');\n        if (predictions.length == 6) {\n          console.log('done');\n          setPredictions([]);\n          // console.log(count)\n          setCount(prevCount => prevCount + 1);\n          fetchData();\n          clearTableRows();\n        }\n      });\n    }\n  }, [predictions]);\n  const handleSubmit = async () => {\n    try {\n      if (inputValue.length > 100) {\n        alert(\"Your proposed headline is too long.Try to shorten it for good score!!\");\n      }\n      const response = await axios.post(API_URL, {\n        input: inputValue\n      });\n      const newPred = {\n        Headline: response.data.Headline,\n        Score: response.data.Score\n      };\n      //setPredictions([{ Headline: response.data.Headline, Score: response.data.Score }]);\n      setPredictions(prevPredictions => [...prevPredictions, newPred]);\n      if (response.data.Consistent < 0.5) {\n        alert(\"You are moving off the topic.Try to be consistent to get a good score!!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headline\",\n        style: {\n          display: 'flex',\n          background: 'green',\n          width: '100%',\n          alignItems: 'center',\n          justifyContent: 'center',\n          alignContent: 'center',\n          height: '80px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: '#FFF',\n            fontFamily: 'monospace'\n          },\n          children: \"Headlines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          marginTop: \"50px\",\n          fontFamily: 'monospace'\n        },\n        children: \"Reframe the below headline to find your score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: \"50px\",\n          fontFamily: 'monospace'\n        },\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        sx: {\n          width: '100%',\n          alignItems: 'center',\n          justifyContent: \"center\",\n          margin: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          value: inputValue,\n          onChange: event => setInputValue(event.target.value),\n          placeholder: \"Enter your proposed headline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          style: {\n            marginLeft: '10px',\n            top: '-10px',\n            position: 'relative'\n          },\n          type: \"submit\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        id: \"predictions-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Headline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          id: \"table-body\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"sho9MxFpVOQkR2Ca6rrr+EXDRdA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","useNavigate","Table","Button","axios","Stack","API_URL","API_GET_URL","End","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","inputValue","setInputValue","predictions","setPredictions","text","setText","isTabActive","setIsTabActive","tabChangeCount","setTabChangeCount","count","setCount","navigate","replace","fetchData","response","post","task","data","console","log","error","clearTableRows","table","document","getElementById","i","rows","length","deleteRow","sortedPredictions","sort","a","b","Score","forEach","prediction","newRow","insertRow","headlineCell","insertCell","innerText","Headline","scoreCell","classList","add","prevCount","handleSubmit","alert","input","newPred","prevPredictions","Consistent","children","style","display","flexDirection","alignItems","className","background","width","justifyContent","alignContent","height","color","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","margin","direction","sx","type","value","onChange","event","target","placeholder","variant","marginLeft","top","position","onClick","striped","bordered","id","_c","$RefreshReg$"],"sources":["/Users/manaswiniaitha/Documents/part-time/headlines-frontend/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './End';\nimport { BrowserRouter as Router,Routes, Route,useNavigate } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport axios from \"axios\";\nimport { Stack } from '@mui/material';\nimport { API_URL,API_GET_URL } from \"../src/constants\";\nimport End from './End';\nfunction App() {\n  \n  //const navigate = useNavigate();\n  const [inputValue, setInputValue] = useState('');\n  const [predictions, setPredictions] = useState([]);\n  const [text,setText]=useState('');\n  const [isTabActive, setIsTabActive] = useState(true);\n  const [tabChangeCount, setTabChangeCount] = useState(0);\n  const [count,setCount] =useState(0);\n\n  // Function to handle tab visibility change\n  // const handleVisibilityChange = () => {\n  //   setIsTabActive(!document.hidden);\n  //   setTabChangeCount((prevCount) => prevCount + 1);\n  //   console.log('count')\n  //   console.log(tabChangeCount)\n  // };\n\n  useEffect(() => {\n    if (count >= 16) {\n      // alert('Game is over'); \n    const navigate = useNavigate();\n    // alert('Game is over');\n    navigate('/end', { replace: true });\n      // <End/>\n      // navigate('/end', { replace: true });\n    }\n  }, [count]);\n\n  async function fetchData() {\n    try {\n      const response = await axios.post(API_GET_URL, { task: '0' });\n      setText(response.data);\n      console.log('before')\n      console.log(count)\n       \n      console.log(count)\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    fetchData();\n    // document.addEventListener('visibilitychange', handleVisibilityChange);\n    // return () => {\n    //   document.removeEventListener('visibilitychange', handleVisibilityChange);\n    // };\n  }, []);\n\n  const clearTableRows = () => {\n    var table = document.getElementById(\"table-body\");\n    for(var i = table.rows.length - 1; i > 0; i--)\n    {\n        table.deleteRow(i);\n    }\n    \n  };\n\n  useEffect(() => {\n    const table = document.getElementById('predictions-table');\n    \n    if (table) {\n      // Clear existing rows\n      \n      clearTableRows();\n     \n      // Sort predictions array by score in descending order\n      const sortedPredictions= predictions.sort((a, b) => b.Score - a.Score);\n      sortedPredictions.forEach((prediction) => {\n        const newRow = table.insertRow();\n        // Create cells and set their values\n        const headlineCell = newRow.insertCell();\n        headlineCell.innerText = prediction.Headline;\n  \n        const scoreCell = newRow.insertCell();\n        scoreCell.innerText = prediction.Score;\n        if (prediction.Headline === inputValue) {\n          newRow.classList.add('green-row');\n        }\n        setInputValue('');\n        if (predictions.length == 6) {\n          console.log('done');\n          setPredictions([])\n          // console.log(count)\n          setCount((prevCount)=>prevCount+1) \n          fetchData();\n          clearTableRows();\n        }\n      });\n    }\n  }, [predictions]);\n  \n\n\n  const handleSubmit = async () => {\n    try {\n      if (inputValue.length > 100) {\n        alert(\"Your proposed headline is too long.Try to shorten it for good score!!\");\n      }\n      const response = await axios.post(API_URL, { input: inputValue });\n      const newPred = { Headline: response.data.Headline, Score: response.data.Score };\n      //setPredictions([{ Headline: response.data.Headline, Score: response.data.Score }]);\n      setPredictions((prevPredictions) => [...prevPredictions, newPred]);\n      if(response.data.Consistent < 0.5){\n        alert(\"You are moving off the topic.Try to be consistent to get a good score!!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Router>\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <div className='headline' style={{display:'flex',background:'green', width:'100%',alignItems:'center',justifyContent:'center', alignContent:'center', height:'80px'}}>\n        <h1 style={{color:'#FFF',fontFamily:'monospace'}}>Headlines</h1>\n      </div>\n      <h4 style={{marginTop:\"50px\",fontFamily:'monospace'}}>Reframe the below headline to find your score</h4>\n      <h2 style={{margin:\"50px\",fontFamily:'monospace'}}>{text}</h2>\n      <Stack direction='row' sx={{width:'100%', alignItems:'center', justifyContent:\"center\", margin:'10px'}}>\n        <input className='input'\n          type=\"text\"\n          value={inputValue}\n          onChange={(event) => setInputValue(event.target.value)}\n          placeholder=\"Enter your proposed headline\"\n        />\n        <Button variant=\"success\" style={{marginLeft:'10px', top:'-10px', position:'relative'}} type='submit'onClick={handleSubmit}>Submit</Button>\n      </Stack>\n      <Table  striped bordered id = \"predictions-table\">\n        <thead>\n          <tr>\n            <th>Headline</th>\n            <th>Score</th>\n          </tr>\n        </thead>\n        <tbody id='table-body'>\n          <tr>\n            <td></td>\n            <td></td>  \n          </tr>\n        </tbody>\n      </Table>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}