{"ast":null,"code":"var _jsxFileName = \"/Users/manaswiniaitha/Documents/part-time/headlines-frontend/my-app/src/components/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Game.css';\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport axios from \"axios\";\nimport { Stack } from '@mui/material';\nimport { API_URL, API_GET_URL } from \"../constants\";\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const location = useLocation();\n  const {\n    prolificid,\n    studyid\n  } = location.state;\n  const navigate = useNavigate();\n  const [inputValue, setInputValue] = useState('');\n  const [predictions, setPredictions] = useState([]);\n  const [text, setText] = useState('');\n  const [timer, setTimer] = useState(0);\n  const [isTabActive, setIsTabActive] = useState(true);\n  const [tabChangeCount, setTabChangeCount] = useState(0);\n  // const [count,setCount] =useState(0);\n  const [Count, setCount] = useState(0);\n  // useEffect(() => {\n  //   const interval = setInterval(() => {\n  //     setTimer((prevTimer) => prevTimer + 1);\n  //   }, 1000);\n\n  //   if (predictions.length === 3) {\n  //     console.log(timer)\n  //     clearInterval(interval);\n  //   }\n\n  //   return () => {\n  //     clearInterval(interval);\n  //   };\n  // }, [predictions]);\n\n  useEffect(() => {\n    console.log('in game');\n    console.log(param1, param2);\n    const handleVisibilityChange = () => {\n      if (document.hidden) {\n        // User moved away from the tab or window\n        setTabChangeCount(prevCount => prevCount + 1);\n        localStorage.setItem('tabChangeCount', tabChangeCount + 1);\n      }\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, [tabChangeCount]);\n  useEffect(() => {\n    const storedTabChangeCount = localStorage.getItem('tabChangeCount');\n    if (storedTabChangeCount) {\n      setTabChangeCount(parseInt(storedTabChangeCount, 10));\n    }\n  }, []);\n  useEffect(() => {\n    const Count = localStorage.getItem('Count');\n    console.log('Count');\n    console.log(Count);\n    if (Count) {\n      //16\n      if (Count >= 6) {\n        navigate('/feedback');\n        // alert('Game is over'); \n        setTabChangeCount(0);\n        localStorage.setItem('tabChangeCount', 0);\n        localStorage.setItem('Count', 0);\n      }\n    }\n  }, [Count]);\n  useEffect(() => {\n    const handleBeforeUnload = () => {\n      setTabChangeCount(0);\n      localStorage.removeItem('tabChangeCount');\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, []);\n  async function fetchData() {\n    try {\n      const response = await axios.post(API_GET_URL, {\n        task: '0'\n      });\n      setText(response.data);\n      console.log('before');\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const clearTableRows = () => {\n    var table = document.getElementById(\"table-body\");\n    for (var i = table.rows.length - 1; i > 0; i--) {\n      table.deleteRow(i);\n    }\n  };\n  useEffect(() => {\n    const table = document.getElementById('predictions-table');\n    if (table) {\n      // Clear existing rows\n\n      clearTableRows();\n\n      // Sort predictions array by score in descending order\n      const sortedPredictions = predictions.sort((a, b) => b.Score - a.Score);\n      sortedPredictions.forEach(prediction => {\n        const newRow = table.insertRow();\n        // Create cells and set their values\n        const headlineCell = newRow.insertCell();\n        headlineCell.innerText = prediction.Headline;\n        const scoreCell = newRow.insertCell();\n        scoreCell.innerText = prediction.Score;\n        if (prediction.Headline === inputValue) {\n          newRow.classList.add('green-row');\n        }\n        setInputValue('');\n        if (predictions.length == 3) {\n          console.log('done');\n          setPredictions([]);\n          // console.log(count)\n          setCount(prevCount => prevCount + 1);\n          localStorage.setItem('Count', Count + 1);\n          fetchData();\n          clearTableRows();\n        }\n      });\n    }\n  }, [predictions]);\n  const handleSubmit = async () => {\n    try {\n      if (inputValue.length > 100) {\n        alert(\"Your proposed headline is too long.Try to shorten it for good score!!\");\n      }\n      const response = await axios.post(API_URL, {\n        input: inputValue\n      });\n      const newPred = {\n        Headline: response.data.Headline,\n        Score: response.data.Score\n      };\n      //setPredictions([{ Headline: response.data.Headline, Score: response.data.Score }]);\n      setPredictions(prevPredictions => [...prevPredictions, newPred]);\n      if (response.data.Consistent < 0.5) {\n        alert(\"You are moving off the topic.Try to be consistent to get a good score!!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headline\",\n      style: {\n        display: 'flex',\n        background: 'green',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        alignContent: 'center',\n        height: '80px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: '#FFF',\n          fontFamily: 'monospace'\n        },\n        children: \"Headlines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        marginTop: \"50px\",\n        fontFamily: 'monospace'\n      },\n      children: \"Reframe the below headline to find your score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        margin: \"50px\",\n        fontFamily: 'monospace'\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      sx: {\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: \"center\",\n        margin: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        value: inputValue,\n        onChange: event => setInputValue(event.target.value),\n        placeholder: \"Enter your proposed headline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        style: {\n          marginLeft: '10px',\n          top: '-10px',\n          position: 'relative'\n        },\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      id: \"predictions-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Headline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        id: \"table-body\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Tab Change Count: \", tabChangeCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 7\n  }, this);\n}\n_s(Game, \"Md3sBBqJU1XYST6ZUa1nO86V/rw=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","useNavigate","Table","Button","axios","Stack","API_URL","API_GET_URL","useLocation","jsxDEV","_jsxDEV","Game","_s","location","prolificid","studyid","state","navigate","inputValue","setInputValue","predictions","setPredictions","text","setText","timer","setTimer","isTabActive","setIsTabActive","tabChangeCount","setTabChangeCount","Count","setCount","console","log","param1","param2","handleVisibilityChange","document","hidden","prevCount","localStorage","setItem","addEventListener","removeEventListener","storedTabChangeCount","getItem","parseInt","handleBeforeUnload","removeItem","window","fetchData","response","post","task","data","error","clearTableRows","table","getElementById","i","rows","length","deleteRow","sortedPredictions","sort","a","b","Score","forEach","prediction","newRow","insertRow","headlineCell","insertCell","innerText","Headline","scoreCell","classList","add","handleSubmit","alert","input","newPred","prevPredictions","Consistent","style","display","flexDirection","alignItems","children","className","background","width","justifyContent","alignContent","height","color","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","margin","direction","sx","type","value","onChange","event","target","placeholder","variant","marginLeft","top","position","onClick","striped","bordered","id","_c","$RefreshReg$"],"sources":["/Users/manaswiniaitha/Documents/part-time/headlines-frontend/my-app/src/components/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Game.css';\nimport { BrowserRouter as Router,Routes, Route,useNavigate } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport axios from \"axios\";\nimport { Stack } from '@mui/material';\nimport { API_URL,API_GET_URL } from \"../constants\";\nimport { useLocation } from 'react-router-dom';\nfunction Game() {\n    const location = useLocation();\n    const { prolificid, studyid } = location.state;\n    const navigate = useNavigate();\n    const [inputValue, setInputValue] = useState('');\n    const [predictions, setPredictions] = useState([]);\n    const [text,setText]=useState('');\n    const [timer, setTimer] = useState(0);\n    const [isTabActive, setIsTabActive] = useState(true);\n    const [tabChangeCount, setTabChangeCount] = useState(0);\n    // const [count,setCount] =useState(0);\n    const [Count,setCount] =useState(0);\n    // useEffect(() => {\n    //   const interval = setInterval(() => {\n    //     setTimer((prevTimer) => prevTimer + 1);\n    //   }, 1000);\n  \n    //   if (predictions.length === 3) {\n    //     console.log(timer)\n    //     clearInterval(interval);\n    //   }\n  \n    //   return () => {\n    //     clearInterval(interval);\n    //   };\n    // }, [predictions]);\n  \n    useEffect(() => {\n      console.log('in game')\n      console.log(param1,param2)\n      const handleVisibilityChange = () => {\n        if (document.hidden) {\n          // User moved away from the tab or window\n          setTabChangeCount((prevCount) => prevCount + 1);\n          localStorage.setItem('tabChangeCount', tabChangeCount + 1);\n        }\n      };\n  \n      document.addEventListener('visibilitychange', handleVisibilityChange);\n  \n      return () => {\n        document.removeEventListener('visibilitychange', handleVisibilityChange);\n      };\n    }, [tabChangeCount]);\n  \n    useEffect(() => {\n      const storedTabChangeCount = localStorage.getItem('tabChangeCount');\n      if (storedTabChangeCount) {\n        setTabChangeCount(parseInt(storedTabChangeCount, 10));\n      }\n    }, []);\n  \n    useEffect(() => {\n      const Count = localStorage.getItem('Count');\n      console.log('Count')\n      console.log(Count)\n      if (Count){\n        //16\n        if (Count >= 6) {\n          navigate('/feedback')\n          // alert('Game is over'); \n          setTabChangeCount(0);\n          localStorage.setItem('tabChangeCount', 0);\n          localStorage.setItem('Count', 0);\n  \n          }\n      }\n     \n    }, [Count]);\n  \n    useEffect(() => {\n      const handleBeforeUnload = () => {\n        setTabChangeCount(0);\n        localStorage.removeItem('tabChangeCount');\n      };\n      window.addEventListener('beforeunload', handleBeforeUnload);\n  \n      return () => {\n        window.removeEventListener('beforeunload', handleBeforeUnload);\n      };\n    }, []);\n  \n  \n    async function fetchData() {\n      try {\n        const response = await axios.post(API_GET_URL, { task: '0' });\n        setText(response.data);\n        console.log('before')\n        \n         \n        \n      } catch (error) {\n        console.log(error);\n      }\n    }\n    useEffect(() => {\n      fetchData();\n    }, []);\n  \n    const clearTableRows = () => {\n      var table = document.getElementById(\"table-body\");\n      for(var i = table.rows.length - 1; i > 0; i--)\n      {\n          table.deleteRow(i);\n      }\n      \n    };\n  \n    useEffect(() => {\n      const table = document.getElementById('predictions-table');\n      \n      if (table) {\n        // Clear existing rows\n        \n        clearTableRows();\n       \n        // Sort predictions array by score in descending order\n        const sortedPredictions= predictions.sort((a, b) => b.Score - a.Score);\n        sortedPredictions.forEach((prediction) => {\n          const newRow = table.insertRow();\n          // Create cells and set their values\n          const headlineCell = newRow.insertCell();\n          headlineCell.innerText = prediction.Headline;\n    \n          const scoreCell = newRow.insertCell();\n          scoreCell.innerText = prediction.Score;\n          if (prediction.Headline === inputValue) {\n            newRow.classList.add('green-row');\n          }\n          setInputValue('');\n          if (predictions.length == 3) {\n            console.log('done');\n            setPredictions([])\n            // console.log(count)\n            setCount((prevCount)=>prevCount+1) \n            localStorage.setItem('Count', Count + 1);\n            fetchData();\n            clearTableRows();\n          }\n        });\n      }\n    }, [predictions]);\n    \n  \n  \n    const handleSubmit = async () => {\n      try {\n        if (inputValue.length > 100) {\n          alert(\"Your proposed headline is too long.Try to shorten it for good score!!\");\n        }\n        const response = await axios.post(API_URL, { input: inputValue });\n        const newPred = { Headline: response.data.Headline, Score: response.data.Score };\n        //setPredictions([{ Headline: response.data.Headline, Score: response.data.Score }]);\n        setPredictions((prevPredictions) => [...prevPredictions, newPred]);\n        if(response.data.Consistent < 0.5){\n          alert(\"You are moving off the topic.Try to be consistent to get a good score!!\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  \n    return (\n      \n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <div className='headline' style={{display:'flex',background:'green', width:'100%',alignItems:'center',justifyContent:'center', alignContent:'center', height:'80px'}}>\n          <h1 style={{color:'#FFF',fontFamily:'monospace'}}>Headlines</h1>\n        </div>\n        <h4 style={{marginTop:\"50px\",fontFamily:'monospace'}}>Reframe the below headline to find your score</h4>\n        <h2 style={{margin:\"50px\",fontFamily:'monospace'}}>{text}</h2>\n        <Stack direction='row' sx={{width:'100%', alignItems:'center', justifyContent:\"center\", margin:'10px'}}>\n          <input className='input'\n            type=\"text\"\n            value={inputValue}\n            onChange={(event) => setInputValue(event.target.value)}\n            placeholder=\"Enter your proposed headline\"\n          />\n          <Button variant=\"success\" style={{marginLeft:'10px', top:'-10px', position:'relative'}} type='submit'onClick={handleSubmit}>Submit</Button>\n        </Stack>\n        <Table  striped bordered id = \"predictions-table\">\n          <thead>\n            <tr>\n              <th>Headline</th>\n              <th>Score</th>\n            </tr>\n          </thead>\n          <tbody id='table-body'>\n            <tr>\n              <td></td>\n              <td></td>  \n            </tr>\n          </tbody>\n        </Table>\n      \n        <span>Tab Change Count: {tabChangeCount}</span>\n      </div>\n  \n     \n    );\n  }\n  \n  export default Game;\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}