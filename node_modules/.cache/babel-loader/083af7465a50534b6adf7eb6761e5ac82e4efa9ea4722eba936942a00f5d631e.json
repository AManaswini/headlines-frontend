{"ast":null,"code":"var _jsxFileName = \"/Users/manaswiniaitha/Documents/part-time/headlines-frontend/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport axios from \"axios\";\nimport { Stack } from '@mui/material';\nimport { API_URL, API_GET_URL } from \"../src/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [predictions, setPredictions] = useState([]);\n  const [text, setText] = useState('');\n  async function fetchData() {\n    try {\n      const response = await axios.post(API_GET_URL, {\n        task: '0'\n      });\n      setText(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const clearTableRows = () => {\n    const tableBody = document.getElementById('table-body');\n    console.log(tableBody);\n    if (tableBody) {\n      const rows = tableBody.querySelectorAll('tr');\n      console.log(rows);\n      rows.forEach(row => {\n        row.remove();\n      });\n    }\n  };\n  useEffect(() => {\n    const table = document.getElementById('predictions-table');\n    if (table) {\n      // Clear existing rows\n      // table.querySelectorAll('tbody tr').forEach((row) => row.remove());\n      clearTableRows();\n      // Sort predictions array by score in descending order\n      const sortedPredictions = predictions.sort((a, b) => b.Score - a.Score);\n      // Create new rows for each prediction\n      sortedPredictions.forEach(prediction => {\n        const newRow = table.insertRow();\n\n        // Create cells and set their values\n        const headlineCell = newRow.insertCell();\n        headlineCell.innerText = prediction.Headline;\n        const scoreCell = newRow.insertCell();\n        scoreCell.innerText = prediction.Score;\n        if (prediction.Headline === inputValue) {\n          newRow.classList.add('green-row');\n        }\n        setInputValue('');\n      });\n    }\n  }, [predictions]);\n  const handleSubmit = async () => {\n    try {\n      if (inputValue.length > 100) {\n        alert(\"Your proposed headline is too long.Try to shorten it for good score!!\");\n      }\n      const response = await axios.post(API_URL, {\n        input: inputValue\n      });\n      // setPredictions(response.data);\n      const newPred = {\n        Headline: response.data.Headline,\n        Score: response.data.Score\n      };\n      //setPredictions([{ Headline: response.data.Headline, Score: response.data.Score }]);\n      clearTableRows();\n      setPredictions(prevPredictions => [...prevPredictions, newPred]);\n      console.log(predictions);\n      if (response.data.Consistent < 0.5) {\n        alert(\"You are moving off the topic.Try to be consistent to get a good score!!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headline\",\n      style: {\n        display: 'flex',\n        background: 'green',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        alignContent: 'center',\n        height: '80px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: '#FFF',\n          fontFamily: 'monospace'\n        },\n        children: \"Headlines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        marginTop: \"50px\",\n        fontFamily: 'monospace'\n      },\n      children: \"Reframe the below headline to find your score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        margin: \"50px\",\n        fontFamily: 'monospace'\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      sx: {\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: \"center\",\n        margin: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        value: inputValue,\n        onChange: event => setInputValue(event.target.value),\n        placeholder: \"Enter your proposed headline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        style: {\n          marginLeft: '10px',\n          top: '-10px',\n          position: 'relative'\n        },\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      id: \"predictions-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Headline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        id: \"table-body\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dYKl6pPWW7HtLoNBaChY+u5nRTA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","axios","Stack","API_URL","API_GET_URL","jsxDEV","_jsxDEV","App","_s","inputValue","setInputValue","predictions","setPredictions","text","setText","fetchData","response","post","task","data","error","console","log","clearTableRows","tableBody","document","getElementById","rows","querySelectorAll","forEach","row","remove","table","sortedPredictions","sort","a","b","Score","prediction","newRow","insertRow","headlineCell","insertCell","innerText","Headline","scoreCell","classList","add","handleSubmit","length","alert","input","newPred","prevPredictions","Consistent","style","display","flexDirection","alignItems","children","className","background","width","justifyContent","alignContent","height","color","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","margin","direction","sx","type","value","onChange","event","target","placeholder","variant","marginLeft","top","position","onClick","striped","bordered","id","_c","$RefreshReg$"],"sources":["/Users/manaswiniaitha/Documents/part-time/headlines-frontend/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport axios from \"axios\";\nimport { Stack } from '@mui/material';\nimport { API_URL,API_GET_URL } from \"../src/constants\";\nfunction App() {\n  const [inputValue, setInputValue] = useState('');\n  const [predictions, setPredictions] = useState([]);\n  const [text,setText]=useState('');\n  async function fetchData() {\n    try {\n      const response = await axios.post(API_GET_URL, { task: '0' });\n      setText(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const clearTableRows = () => {\n    const tableBody = document.getElementById('table-body');\n    console.log(tableBody)\n    if (tableBody) {\n      const rows = tableBody.querySelectorAll('tr');\n      console.log(rows)\n      rows.forEach((row) => {\n        row.remove();\n      });\n    }\n  };\n\n  useEffect(() => {\n    const table = document.getElementById('predictions-table');\n    if (table) {\n      // Clear existing rows\n      // table.querySelectorAll('tbody tr').forEach((row) => row.remove());\n      clearTableRows();\n      // Sort predictions array by score in descending order\n      const sortedPredictions = predictions.sort((a, b) => b.Score - a.Score);\n      // Create new rows for each prediction\n      sortedPredictions.forEach((prediction) => {\n        const newRow = table.insertRow();\n  \n        // Create cells and set their values\n        const headlineCell = newRow.insertCell();\n        headlineCell.innerText = prediction.Headline;\n  \n        const scoreCell = newRow.insertCell();\n        scoreCell.innerText = prediction.Score;\n        if (prediction.Headline === inputValue) {\n          newRow.classList.add('green-row');\n        }\n        setInputValue('');\n      });\n    }\n  }, [predictions]);\n  \n\n\n  const handleSubmit = async () => {\n    try {\n      if (inputValue.length > 100) {\n        alert(\"Your proposed headline is too long.Try to shorten it for good score!!\");\n      }\n      const response = await axios.post(API_URL, { input: inputValue });\n      // setPredictions(response.data);\n      const newPred = { Headline: response.data.Headline, Score: response.data.Score };\n      //setPredictions([{ Headline: response.data.Headline, Score: response.data.Score }]);\n      clearTableRows()\n      setPredictions((prevPredictions) => [...prevPredictions, newPred]);\n      console.log(predictions)\n      if(response.data.Consistent < 0.5){\n        alert(\"You are moving off the topic.Try to be consistent to get a good score!!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <div className='headline' style={{display:'flex',background:'green', width:'100%',alignItems:'center',justifyContent:'center', alignContent:'center', height:'80px'}}>\n        <h1 style={{color:'#FFF',fontFamily:'monospace'}}>Headlines</h1>\n      </div>\n      <h4 style={{marginTop:\"50px\",fontFamily:'monospace'}}>Reframe the below headline to find your score</h4>\n      <h2 style={{margin:\"50px\",fontFamily:'monospace'}}>{text}</h2>\n      <Stack direction='row' sx={{width:'100%', alignItems:'center', justifyContent:\"center\", margin:'10px'}}>\n        <input className='input'\n          type=\"text\"\n          value={inputValue}\n          onChange={(event) => setInputValue(event.target.value)}\n          placeholder=\"Enter your proposed headline\"\n        />\n        <Button variant=\"success\" style={{marginLeft:'10px', top:'-10px', position:'relative'}} type='submit'onClick={handleSubmit}>Submit</Button>\n      </Stack>\n      <Table  striped bordered id = \"predictions-table\">\n        <thead>\n          <tr>\n            <th>Headline</th>\n            <th>Score</th>\n            {/* <th>MCTR-LM</th>\n            <th>Human</th>\n            <th>Consistent</th> */}\n          </tr>\n        </thead>\n        <tbody id='table-body'>\n          <tr>\n            <td>0</td>\n            <td>0</td>  \n          </tr>\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}