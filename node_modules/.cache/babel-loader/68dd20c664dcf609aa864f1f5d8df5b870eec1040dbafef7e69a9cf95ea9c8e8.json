{"ast":null,"code":"var _jsxFileName = \"/Users/manaswiniaitha/Documents/part-time/headlines-frontend/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport axios from \"axios\";\nimport { Stack } from '@mui/material';\nimport { API_URL, API_GET_URL } from \"../src/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [predictions, setPredictions] = useState([]);\n  const [text, setText] = useState('');\n  const [isTabActive, setIsTabActive] = useState(true);\n  const [tabChangeCount, setTabChangeCount] = useState(0);\n  const [count, setCount] = useState(0);\n  // const [sortedPredictions, setSortedPredictions]=useState([]);\n  // Function to handle tab visibility change\n  const handleVisibilityChange = () => {\n    setIsTabActive(!document.hidden);\n    setTabChangeCount(prevCount => prevCount + 1);\n    console.log('count');\n    console.log(tabChangeCount);\n  };\n  async function fetchData() {\n    try {\n      const response = await axios.post(API_GET_URL, {\n        task: '0'\n      });\n      setText(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    fetchData();\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, []);\n  const clearTableRows = () => {\n    const tableBody = document.getElementById('table-body');\n    // console.log('in clear')\n    // console.log(tableBody)\n    // if (tableBody) {\n    //   const rows = tableBody.querySelectorAll('tr');\n\n    //   console.log('in body')\n    //   console.log(rows)\n    //   rows.forEach((row) => {\n    //     console.log(row.innerHTML)\n    //     row.remove();\n    //     console.log(row.innerHTML)\n    //   });\n    //   console.log(rows)\n    // }\n    var table = document.getElementById(\"table-body\");\n    for (var i = table.rows.length - 1; i > 0; i--) {\n      table.deleteRow(i);\n    }\n  };\n  useEffect(() => {\n    const table = document.getElementById('predictions-table');\n    if (table) {\n      // Clear existing rows\n      // table.querySelectorAll('tbody tr').forEach((row) => row.remove());\n      console.log(\"Before clearing table rows\");\n      clearTableRows();\n      console.log(\"after clearing table rows\");\n      // Sort predictions array by score in descending order\n      const sortedPredictions = predictions.sort((a, b) => b.Score - a.Score);\n      // setSortedPredictions(sp)\n      // Create new rows for each prediction\n      sortedPredictions.forEach(prediction => {\n        const newRow = table.insertRow();\n\n        // Create cells and set their values\n        const headlineCell = newRow.insertCell();\n        headlineCell.innerText = prediction.Headline;\n        const scoreCell = newRow.insertCell();\n        scoreCell.innerText = prediction.Score;\n        if (prediction.Headline === inputValue) {\n          newRow.classList.add('green-row');\n        }\n        setInputValue('');\n        if (predictions.length >= 8) {\n          console.log('done');\n          // fetchData()\n          window.location.reload();\n          setCount(prevCount => prevCount + 1);\n          if (count == 2) {\n            console.log('over');\n            alert('Game over');\n          }\n        }\n      });\n    }\n  }, [predictions]);\n  const handleSubmit = async () => {\n    try {\n      if (inputValue.length > 100) {\n        alert(\"Your proposed headline is too long.Try to shorten it for good score!!\");\n      }\n      const response = await axios.post(API_URL, {\n        input: inputValue\n      });\n      // setPredictions(response.data);\n      const newPred = {\n        Headline: response.data.Headline,\n        Score: response.data.Score\n      };\n      //setPredictions([{ Headline: response.data.Headline, Score: response.data.Score }]);\n      setPredictions(prevPredictions => [...prevPredictions, newPred]);\n      console.log(predictions);\n      // if (predictions.length >= 8) {\n      //   console.log('done');\n      //   // fetchData()\n      //   window.location.reload()\n      // }\n      if (response.data.Consistent < 0.5) {\n        alert(\"You are moving off the topic.Try to be consistent to get a good score!!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headline\",\n      style: {\n        display: 'flex',\n        background: 'green',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        alignContent: 'center',\n        height: '80px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: '#FFF',\n          fontFamily: 'monospace'\n        },\n        children: \"Headlines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        marginTop: \"50px\",\n        fontFamily: 'monospace'\n      },\n      children: \"Reframe the below headline to find your score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        margin: \"50px\",\n        fontFamily: 'monospace'\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      sx: {\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: \"center\",\n        margin: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        value: inputValue,\n        onChange: event => setInputValue(event.target.value),\n        placeholder: \"Enter your proposed headline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        style: {\n          marginLeft: '10px',\n          top: '-10px',\n          position: 'relative'\n        },\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      id: \"predictions-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Headline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        id: \"table-body\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"97Wjx3dU8UwtBKG/6zk2Rx1jjXA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","axios","Stack","API_URL","API_GET_URL","jsxDEV","_jsxDEV","App","_s","inputValue","setInputValue","predictions","setPredictions","text","setText","isTabActive","setIsTabActive","tabChangeCount","setTabChangeCount","count","setCount","handleVisibilityChange","document","hidden","prevCount","console","log","fetchData","response","post","task","data","error","addEventListener","removeEventListener","clearTableRows","tableBody","getElementById","table","i","rows","length","deleteRow","sortedPredictions","sort","a","b","Score","forEach","prediction","newRow","insertRow","headlineCell","insertCell","innerText","Headline","scoreCell","classList","add","window","location","reload","alert","handleSubmit","input","newPred","prevPredictions","Consistent","style","display","flexDirection","alignItems","children","className","background","width","justifyContent","alignContent","height","color","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","margin","direction","sx","type","value","onChange","event","target","placeholder","variant","marginLeft","top","position","onClick","striped","bordered","id","_c","$RefreshReg$"],"sources":["/Users/manaswiniaitha/Documents/part-time/headlines-frontend/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport axios from \"axios\";\nimport { Stack } from '@mui/material';\nimport { API_URL,API_GET_URL } from \"../src/constants\";\nfunction App() {\n  const [inputValue, setInputValue] = useState('');\n  const [predictions, setPredictions] = useState([]);\n  const [text,setText]=useState('');\n  const [isTabActive, setIsTabActive] = useState(true);\n  const [tabChangeCount, setTabChangeCount] = useState(0);\n  const [count,setCount] =useState(0);\n  // const [sortedPredictions, setSortedPredictions]=useState([]);\n  // Function to handle tab visibility change\n  const handleVisibilityChange = () => {\n    setIsTabActive(!document.hidden);\n    setTabChangeCount((prevCount) => prevCount + 1);\n    console.log('count')\n    console.log(tabChangeCount)\n  };\n\n\n  async function fetchData() {\n    try {\n      const response = await axios.post(API_GET_URL, { task: '0' });\n      setText(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    fetchData();\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, []);\n\n  const clearTableRows = () => {\n    const tableBody = document.getElementById('table-body');\n    // console.log('in clear')\n    // console.log(tableBody)\n    // if (tableBody) {\n    //   const rows = tableBody.querySelectorAll('tr');\n      \n    //   console.log('in body')\n    //   console.log(rows)\n    //   rows.forEach((row) => {\n    //     console.log(row.innerHTML)\n    //     row.remove();\n    //     console.log(row.innerHTML)\n    //   });\n    //   console.log(rows)\n    // }\n    var table = document.getElementById(\"table-body\");\n    for(var i = table.rows.length - 1; i > 0; i--)\n    {\n        table.deleteRow(i);\n    }\n    \n  };\n\n  useEffect(() => {\n    const table = document.getElementById('predictions-table');\n    if (table) {\n      // Clear existing rows\n      // table.querySelectorAll('tbody tr').forEach((row) => row.remove());\n      console.log(\"Before clearing table rows\");\n      clearTableRows();\n      console.log(\"after clearing table rows\");\n      // Sort predictions array by score in descending order\n      const sortedPredictions= predictions.sort((a, b) => b.Score - a.Score);\n      // setSortedPredictions(sp)\n      // Create new rows for each prediction\n      sortedPredictions.forEach((prediction) => {\n        const newRow = table.insertRow();\n  \n        // Create cells and set their values\n        const headlineCell = newRow.insertCell();\n        headlineCell.innerText = prediction.Headline;\n  \n        const scoreCell = newRow.insertCell();\n        scoreCell.innerText = prediction.Score;\n        if (prediction.Headline === inputValue) {\n          newRow.classList.add('green-row');\n        }\n        setInputValue('');\n        if (predictions.length >= 8) {\n          console.log('done');\n          // fetchData()\n          window.location.reload()\n          setCount((prevCount)=>prevCount+1)\n          if (count==2){\n            console.log('over')\n              alert('Game over')\n          }\n        }\n      });\n    }\n  }, [predictions]);\n  \n\n\n  const handleSubmit = async () => {\n    try {\n      if (inputValue.length > 100) {\n        alert(\"Your proposed headline is too long.Try to shorten it for good score!!\");\n      }\n      const response = await axios.post(API_URL, { input: inputValue });\n      // setPredictions(response.data);\n      const newPred = { Headline: response.data.Headline, Score: response.data.Score };\n      //setPredictions([{ Headline: response.data.Headline, Score: response.data.Score }]);\n      setPredictions((prevPredictions) => [...prevPredictions, newPred]);\n      console.log(predictions)\n      // if (predictions.length >= 8) {\n      //   console.log('done');\n      //   // fetchData()\n      //   window.location.reload()\n      // }\n      if(response.data.Consistent < 0.5){\n        alert(\"You are moving off the topic.Try to be consistent to get a good score!!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <div className='headline' style={{display:'flex',background:'green', width:'100%',alignItems:'center',justifyContent:'center', alignContent:'center', height:'80px'}}>\n        <h1 style={{color:'#FFF',fontFamily:'monospace'}}>Headlines</h1>\n      </div>\n      <h4 style={{marginTop:\"50px\",fontFamily:'monospace'}}>Reframe the below headline to find your score</h4>\n      <h2 style={{margin:\"50px\",fontFamily:'monospace'}}>{text}</h2>\n      <Stack direction='row' sx={{width:'100%', alignItems:'center', justifyContent:\"center\", margin:'10px'}}>\n        <input className='input'\n          type=\"text\"\n          value={inputValue}\n          onChange={(event) => setInputValue(event.target.value)}\n          placeholder=\"Enter your proposed headline\"\n        />\n        <Button variant=\"success\" style={{marginLeft:'10px', top:'-10px', position:'relative'}} type='submit'onClick={handleSubmit}>Submit</Button>\n      </Stack>\n      <Table  striped bordered id = \"predictions-table\">\n        <thead>\n          <tr>\n            <th>Headline</th>\n            <th>Score</th>\n          </tr>\n        </thead>\n        <tbody id='table-body'>\n          <tr>\n            <td>0</td>\n            <td>0</td>  \n          </tr>\n          {/* {sortedPredictions.map((item) => (\n            <tr key={item.id}>\n              <td>{item.id}</td>\n              <td>{item.name}</td>\n            </tr>\n          ))} */}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}