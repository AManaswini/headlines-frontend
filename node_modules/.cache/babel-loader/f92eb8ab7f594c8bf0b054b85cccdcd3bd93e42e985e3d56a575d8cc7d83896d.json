{"ast":null,"code":"var _jsxFileName = \"/Users/manaswiniaitha/Documents/part-time/headlines-frontend/my-app/src/components/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Game.css';\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport axios from \"axios\";\nimport { Stack } from '@mui/material';\nimport { API_URL, API_GET_URL } from \"../constants\";\nimport { useLocation } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const prolificid = searchParams.get('PROLIFIC_PID');\n  const studyid = searchParams.get('STUDY_ID');\n  const navigate = useNavigate();\n  const [inputValue, setInputValue] = useState('');\n  const [predictions, setPredictions] = useState([]);\n  const [text, setText] = useState('');\n  const [isTabActive, setIsTabActive] = useState(true);\n  const [tabChangeCount, setTabChangeCount] = useState(0);\n  const [attemptno, setattemptno] = useState(1);\n  // const [count,setCount] =useState(0);\n  const [Count, setCount] = useState(0);\n  const [inputDict, setInputDict] = useState({});\n  const [timer, setTimer] = useState(0);\n  const [intervalId, setIntervalId] = useState(null);\n  const [id, setid] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [totaltime, settotaltime] = useState([]);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setSeconds(prevSeconds => prevSeconds + 1);\n    }, 1000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  useEffect(() => {\n    console.log('in game');\n    setInputDict(prevInputDict => ({\n      ...prevInputDict,\n      ['prolificid']: prolificid\n    }));\n    setInputDict(prevInputDict => ({\n      ...prevInputDict,\n      ['studyid']: studyid\n    }));\n  }, []);\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.hidden) {\n        // User moved away from the tab or window\n        setTabChangeCount(prevCount => prevCount + 1);\n        localStorage.setItem('tabChangeCount', tabChangeCount + 1);\n      }\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, [tabChangeCount]);\n  useEffect(() => {\n    const storedTabChangeCount = localStorage.getItem('tabChangeCount');\n    if (storedTabChangeCount) {\n      setTabChangeCount(parseInt(storedTabChangeCount, 10));\n    }\n  }, []);\n  useEffect(() => {\n    const Count = localStorage.getItem('Count');\n    if (Count) {\n      //16\n      console.log('Count');\n      console.log(Count);\n      if (Count >= 9) {\n        console.log('Count');\n        console.log(Count);\n        console.log(inputDict);\n        localStorage.setItem('results', JSON.stringify(inputDict));\n        console.log('final time array');\n        console.log(totaltime);\n        localStorage.setItem('time', totaltime);\n        navigate(`/feedback`);\n        localStorage.setItem('Count', 0);\n      }\n    }\n  }, [Count]);\n  useEffect(() => {\n    const handleBeforeUnload = () => {\n      setTabChangeCount(0);\n      localStorage.removeItem('tabChangeCount');\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, []);\n\n  // async function fetchData() {\n  //   try {\n  //     console.log('=========')\n  //     console.log(timer)\n  //     console.log('====intervalid====')\n  //     console.log(intervalId)\n  //     if (intervalId) {\n  //       console.log('yes')\n  //       clearInterval(intervalId);\n  //       console.log(intervalId)\n  //       setTimer((prevTimer) => 0);\n  //     }\n  //     console.log('===resetting======')\n  //     console.log(timer)\n  //     console.log(intervalId)\n  //     const newIntervalId = setInterval(() => {\n  //       setTimer((prevTimer) => prevTimer + 1);\n  //     }, 1000);\n  //     setIntervalId(newIntervalId);\n  //     console.log('===aftersetting======')\n  //     console.log(timer)\n  //     console.log(intervalId)\n\n  //     const response = await axios.post(API_GET_URL, { task: '0' });\n  //     setText(response.data);\n\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n\n  async function fetchData() {\n    try {\n      setattemptno(1);\n      // console.log(totaltime)\n      settotaltime(prevtotaltime => [...prevtotaltime, seconds]);\n      console.log(totaltime);\n      setSeconds(0);\n      //console.log(seconds)\n      const response = await axios.post(API_GET_URL, {\n        task: '0'\n      });\n      console.log('response');\n      console.log(response);\n      console.log(response.data['output']);\n      setText(response.data['output']);\n      setid(response.data['id']);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    fetchData();\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n        setTimer(0);\n      }\n    };\n  }, []);\n  const clearTableRows = () => {\n    var table = document.getElementById(\"table-body\");\n    for (var i = table.rows.length - 1; i > 0; i--) {\n      table.deleteRow(i);\n    }\n  };\n  useEffect(() => {\n    const table = document.getElementById('predictions-table');\n    if (table) {\n      // Clear existing rows\n\n      clearTableRows();\n\n      // Sort predictions array by score in descending order\n      const sortedPredictions = predictions.sort((a, b) => b.Score - a.Score);\n      sortedPredictions.forEach(prediction => {\n        const newRow = table.insertRow();\n        // Create cells and set their values\n        const headlineCell = newRow.insertCell();\n        headlineCell.innerText = prediction.Headline;\n        const scoreCell = newRow.insertCell();\n        scoreCell.innerText = prediction.Score;\n        if (prediction.Headline === inputValue) {\n          newRow.classList.add('green-row');\n        }\n        setInputValue('');\n        console.log('predictions.length:');\n        console.log(predictions.length);\n        if (predictions.length == 4) {\n          console.log('done');\n          console.log('predictions.length:');\n          console.log(predictions.length);\n          setPredictions([]);\n          setCount(prevCount => prevCount + 1);\n          localStorage.setItem('Count', Count + 1);\n          fetchData();\n          clearTableRows();\n        }\n      });\n    }\n  }, [predictions]);\n  const handleSubmit = async () => {\n    try {\n      setSeconds(0);\n      setattemptno(prevAttemptNo => prevAttemptNo + 1);\n      console.log(seconds);\n      if (inputValue == '') {\n        alert('Please enter a valid input');\n        return;\n      }\n      if (inputValue.length > 100) {\n        alert(\"Your proposed headline is too long.Try to shorten it for good score!!\");\n      }\n      const response = await axios.post(API_URL, {\n        input: inputValue\n      });\n      setInputDict(prevInputDict => {\n        var _prevInputDict$attemp;\n        return {\n          ...prevInputDict,\n          [attemptno]: {\n            ...(prevInputDict[attemptno] || {}),\n            [id]: {\n              ...(((_prevInputDict$attemp = prevInputDict[attemptno]) === null || _prevInputDict$attemp === void 0 ? void 0 : _prevInputDict$attemp.text) || {}),\n              headline: inputValue,\n              score: response.data.Score,\n              consistent: response.data.Consistent,\n              'time': new Date().toLocaleString('en-US', {\n                year: 'numeric',\n                month: '2-digit',\n                day: '2-digit',\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit'\n              }),\n              attemptno: {\n                attemptno\n              }\n              // Add additional properties here if needed\n            }\n          }\n        };\n      });\n\n      const newPred = {\n        Headline: response.data.Headline,\n        Score: response.data.Score\n      };\n      //setPredictions([{ Headline: response.data.Headline, Score: response.data.Score }]);\n      setPredictions(prevPredictions => [...prevPredictions, newPred]);\n      if (response.data.Consistent < 0.5) {\n        alert(\"You are moving off the topic.Try to be consistent to get a good score!!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headline\",\n      style: {\n        display: 'flex',\n        background: '#800000',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        alignContent: 'center',\n        height: '80px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: '#FFF',\n          fontFamily: 'sans-serif'\n        },\n        children: \"Headlines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        marginTop: \"50px\",\n        fontFamily: 'sans-serif'\n      },\n      children: \"Reframe the below headline to find your score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        margin: \"50px\",\n        fontFamily: 'sans-serif'\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      sx: {\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: \"center\",\n        margin: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        value: inputValue,\n        onChange: event => setInputValue(event.target.value),\n        placeholder: \"Enter your proposed headline\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginLeft: '10px',\n          top: '-10px',\n          position: 'relative',\n          background: '#3B71CA'\n        },\n        onClick: handleSubmit,\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      id: \"predictions-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Headline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        id: \"table-body\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 7\n  }, this);\n}\n_s(Game, \"XUOq65V0V/Mk3AnvvKlhiH63ulg=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","useNavigate","Table","Button","axios","Stack","API_URL","API_GET_URL","useLocation","format","jsxDEV","_jsxDEV","Game","_s","location","searchParams","URLSearchParams","search","prolificid","get","studyid","navigate","inputValue","setInputValue","predictions","setPredictions","text","setText","isTabActive","setIsTabActive","tabChangeCount","setTabChangeCount","attemptno","setattemptno","Count","setCount","inputDict","setInputDict","timer","setTimer","intervalId","setIntervalId","id","setid","seconds","setSeconds","totaltime","settotaltime","setInterval","prevSeconds","clearInterval","console","log","prevInputDict","handleVisibilityChange","document","hidden","prevCount","localStorage","setItem","addEventListener","removeEventListener","storedTabChangeCount","getItem","parseInt","JSON","stringify","handleBeforeUnload","removeItem","window","fetchData","prevtotaltime","response","post","task","data","error","clearTableRows","table","getElementById","i","rows","length","deleteRow","sortedPredictions","sort","a","b","Score","forEach","prediction","newRow","insertRow","headlineCell","insertCell","innerText","Headline","scoreCell","classList","add","handleSubmit","prevAttemptNo","alert","input","_prevInputDict$attemp","headline","score","consistent","Consistent","Date","toLocaleString","year","month","day","hour","minute","second","newPred","prevPredictions","style","display","flexDirection","alignItems","children","className","background","width","justifyContent","alignContent","height","color","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","margin","direction","sx","type","value","onChange","event","target","placeholder","required","marginLeft","top","position","onClick","striped","bordered","_c","$RefreshReg$"],"sources":["/Users/manaswiniaitha/Documents/part-time/headlines-frontend/my-app/src/components/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Game.css';\nimport { BrowserRouter as Router,Routes, Route,useNavigate } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport axios from \"axios\";\nimport { Stack } from '@mui/material';\nimport { API_URL,API_GET_URL } from \"../constants\";\nimport { useLocation } from 'react-router-dom';\nimport { format } from 'date-fns'\nfunction Game() {\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n    const prolificid = searchParams.get('PROLIFIC_PID');\n    const studyid = searchParams.get('STUDY_ID');\n    const navigate = useNavigate();\n    const [inputValue, setInputValue] = useState('');\n    const [predictions, setPredictions] = useState([]);\n    const [text,setText]=useState('');\n    const [isTabActive, setIsTabActive] = useState(true);\n    const [tabChangeCount, setTabChangeCount] = useState(0);\n    const [attemptno, setattemptno] = useState(1);\n    // const [count,setCount] =useState(0);\n    const [Count,setCount] =useState(0);\n    const [inputDict, setInputDict] = useState({});\n    const [timer, setTimer] = useState(0);\n    const [intervalId, setIntervalId] = useState(null);\n    const [id,setid]= useState(0);\n    const [seconds, setSeconds] = useState(0);\n    const [totaltime,settotaltime]=useState([]);\n    useEffect(() => {\n      const intervalId = setInterval(() => {\n        setSeconds((prevSeconds) => prevSeconds + 1);\n      }, 1000);\n\n      return () => {\n        clearInterval(intervalId);\n      };\n    }, []);\n    useEffect(() => {\n      console.log('in game');\n      setInputDict((prevInputDict) => ({\n        ...prevInputDict,\n        ['prolificid']: prolificid\n      }));\n      setInputDict((prevInputDict) => ({\n        ...prevInputDict,\n        ['studyid']: studyid\n      }));\n    }, []);\n  \n    useEffect(() => {\n      const handleVisibilityChange = () => {\n        if (document.hidden) {\n          // User moved away from the tab or window\n          setTabChangeCount((prevCount) => prevCount + 1);\n          localStorage.setItem('tabChangeCount', tabChangeCount + 1);\n        }\n      };\n  \n      document.addEventListener('visibilitychange', handleVisibilityChange);\n  \n      return () => {\n        document.removeEventListener('visibilitychange', handleVisibilityChange);\n      };\n    }, [tabChangeCount]);\n  \n    useEffect(() => {\n      const storedTabChangeCount = localStorage.getItem('tabChangeCount');\n      if (storedTabChangeCount) {\n        setTabChangeCount(parseInt(storedTabChangeCount, 10));\n      }\n    }, []);\n  \n    useEffect(() => {\n      const Count = localStorage.getItem('Count');\n      if (Count){\n        //16\n        console.log('Count')\n        console.log(Count)\n        if (Count >= 9) {\n          console.log('Count')\n          console.log(Count)\n          console.log(inputDict)\n          localStorage.setItem('results', JSON.stringify(inputDict));\n          console.log('final time array')\n          console.log(totaltime)\n          localStorage.setItem('time', totaltime);\n          navigate(`/feedback`)\n          localStorage.setItem('Count', 0);\n  \n          }\n      }\n     \n    }, [Count]);\n  \n    useEffect(() => {\n      const handleBeforeUnload = () => {\n        setTabChangeCount(0);\n        localStorage.removeItem('tabChangeCount');\n      };\n      window.addEventListener('beforeunload', handleBeforeUnload);\n  \n      return () => {\n        window.removeEventListener('beforeunload', handleBeforeUnload);\n      };\n    }, []);\n  \n  \n    // async function fetchData() {\n    //   try {\n    //     console.log('=========')\n    //     console.log(timer)\n    //     console.log('====intervalid====')\n    //     console.log(intervalId)\n    //     if (intervalId) {\n    //       console.log('yes')\n    //       clearInterval(intervalId);\n    //       console.log(intervalId)\n    //       setTimer((prevTimer) => 0);\n    //     }\n    //     console.log('===resetting======')\n    //     console.log(timer)\n    //     console.log(intervalId)\n    //     const newIntervalId = setInterval(() => {\n    //       setTimer((prevTimer) => prevTimer + 1);\n    //     }, 1000);\n    //     setIntervalId(newIntervalId);\n    //     console.log('===aftersetting======')\n    //     console.log(timer)\n    //     console.log(intervalId)\n  \n    //     const response = await axios.post(API_GET_URL, { task: '0' });\n    //     setText(response.data);\n        \n         \n        \n    //   } catch (error) {\n    //     console.log(error);\n    //   }\n    // }\n\n    async function fetchData() {\n      try {\n        setattemptno(1);\n        // console.log(totaltime)\n        settotaltime((prevtotaltime) => [...prevtotaltime, seconds]);\n        console.log(totaltime)\n        setSeconds(0);\n        //console.log(seconds)\n        const response = await axios.post(API_GET_URL, { task: '0' });\n        console.log('response');\n        console.log(response)\n        console.log(response.data['output'])\n        setText(response.data['output']);\n        setid(response.data['id']);\n    \n      } catch (error) {\n        console.log(error);\n      }\n    }\n    \n    useEffect(() => {\n      fetchData();\n      return () => {\n        if (intervalId) {\n          clearInterval(intervalId);\n          setTimer(0);\n        }\n      };\n    }, []);\n  \n    const clearTableRows = () => {\n      var table = document.getElementById(\"table-body\");\n      for(var i = table.rows.length - 1; i > 0; i--)\n      {\n          table.deleteRow(i);\n      }\n      \n    };\n  \n    useEffect(() => {\n      const table = document.getElementById('predictions-table');\n      \n      if (table) {\n        // Clear existing rows\n        \n        clearTableRows();\n       \n        // Sort predictions array by score in descending order\n        const sortedPredictions= predictions.sort((a, b) => b.Score - a.Score);\n        sortedPredictions.forEach((prediction) => {\n          const newRow = table.insertRow();\n          // Create cells and set their values\n          const headlineCell = newRow.insertCell();\n          headlineCell.innerText = prediction.Headline;\n    \n          const scoreCell = newRow.insertCell();\n          scoreCell.innerText = prediction.Score;\n          if (prediction.Headline === inputValue) {\n            newRow.classList.add('green-row');\n          }\n          setInputValue('');\n          console.log('predictions.length:')\n          console.log(predictions.length)\n          if (predictions.length == 4) {\n            console.log('done');\n            console.log('predictions.length:')\n            console.log(predictions.length)\n            setPredictions([])\n            setCount((prevCount)=>prevCount+1) \n            localStorage.setItem('Count', Count + 1);\n            fetchData();\n            clearTableRows();\n          }\n        });\n      }\n    }, [predictions]);\n    \n  \n  \n    const handleSubmit = async () => {\n      try {\n        setSeconds(0);\n        setattemptno(prevAttemptNo => prevAttemptNo + 1);\n        console.log(seconds) \n        if(inputValue==''){\n          alert('Please enter a valid input')\n          return\n        }\n        if (inputValue.length > 100) {\n          alert(\"Your proposed headline is too long.Try to shorten it for good score!!\");\n        }\n        const response = await axios.post(API_URL, { input: inputValue });\n        setInputDict((prevInputDict) => ({\n          ...prevInputDict,\n          [attemptno]: {\n            ...(prevInputDict[attemptno] || {}),\n            [id]: {\n              ...(prevInputDict[attemptno]?.text || {}),\n              headline: inputValue,\n              score: response.data.Score,\n              consistent: response.data.Consistent,\n              'time':new Date().toLocaleString('en-US', {\n                year: 'numeric',\n                month: '2-digit',\n                day: '2-digit',\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit'\n              }),\n              attemptno:{attemptno}\n              // Add additional properties here if needed\n            }\n          }\n        }));\n        \n        const newPred = { Headline: response.data.Headline, Score: response.data.Score };\n        //setPredictions([{ Headline: response.data.Headline, Score: response.data.Score }]);\n        setPredictions((prevPredictions) => [...prevPredictions, newPred]);\n        if(response.data.Consistent < 0.5){\n          alert(\"You are moving off the topic.Try to be consistent to get a good score!!\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  \n    return (\n      \n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <div className='headline' style={{display:'flex',background:'#800000', width:'100%',alignItems:'center',justifyContent:'center', alignContent:'center', height:'80px'}}>\n          <h1 style={{color:'#FFF',fontFamily:'sans-serif'}}>Headlines</h1>\n        </div>\n        <h4 style={{marginTop:\"50px\",fontFamily:'sans-serif'}}>Reframe the below headline to find your score</h4>\n        <h2 style={{margin:\"50px\",fontFamily:'sans-serif'}}>{text}</h2>\n        <Stack direction='row' sx={{width:'100%', alignItems:'center', justifyContent:\"center\", margin:'10px'}}>\n          <input className='input'\n            type=\"text\"\n            value={inputValue}\n            onChange={(event) => setInputValue(event.target.value)}\n            placeholder=\"Enter your proposed headline\"\n            required\n          />\n          <Button style={{marginLeft:'10px', top:'-10px', position:'relative',background:'#3B71CA'}} onClick={handleSubmit}>SUBMIT</Button>\n        </Stack>\n        <Table  striped bordered id = \"predictions-table\">\n          <thead>\n            <tr>\n              <th>Headline</th>\n              <th>Score</th>\n            </tr>\n          </thead>\n          <tbody id='table-body'>\n            <tr>\n              <td></td>\n              <td></td>  \n            </tr>\n          </tbody>\n        </Table>\n      \n        {/* <span>Tab Change Count: {tabChangeCount}</span>\n        <span>{seconds}</span> */}\n      </div>\n  \n     \n    );\n  }\n  \n  export default Game;\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}